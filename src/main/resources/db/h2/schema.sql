DROP TABLE user_authorities IF EXISTS;
DROP TABLE users IF EXISTS;

CREATE TABLE users (
  id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  fullname VARCHAR(50) NOT NULL,
  password VARCHAR(200) NOT NULL,
  email VARCHAR(100) NOT NULL,
  create_date TIMESTAMP NOT NULL,
  create_user_id INTEGER,
  delete_date TIMESTAMP NULL,
  delete_user_id INTEGER,
  update_date TIMESTAMP,
  update_user_id INTEGER
);

CREATE INDEX users_username ON users (username);
ALTER TABLE users ADD CONSTRAINT unique_users_username UNIQUE (username);
ALTER TABLE users ADD CONSTRAINT fk_users_create_users FOREIGN KEY (create_user_id) REFERENCES users (id);
ALTER TABLE users ADD CONSTRAINT fk_users_delete_users FOREIGN KEY (delete_user_id) REFERENCES users (id);
ALTER TABLE users ADD CONSTRAINT fk_users_update_users FOREIGN KEY (update_user_id) REFERENCES users (id);

CREATE TABLE user_authorities (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id INTEGER NOT NULL,
  authority  VARCHAR(50) NOT NULL,
  create_date TIMESTAMP NOT NULL,
  create_user_id INTEGER,
  delete_date TIMESTAMP NULL,
  delete_user_id INTEGER
);
ALTER TABLE user_authorities ADD CONSTRAINT fk_user_authorities_users FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE user_authorities ADD CONSTRAINT fk_user_authorities_create_users FOREIGN KEY (create_user_id) REFERENCES users (id);
ALTER TABLE user_authorities ADD CONSTRAINT fk_user_authorities_delete_users FOREIGN KEY (delete_user_id) REFERENCES users (id);
